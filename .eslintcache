[{"C:\\Users\\Sony\\Desktop\\Self made projects\\Whatsapp Clone\\whatsapp-clone\\src\\index.js":"1","C:\\Users\\Sony\\Desktop\\Self made projects\\Whatsapp Clone\\whatsapp-clone\\src\\reportWebVitals.js":"2","C:\\Users\\Sony\\Desktop\\Self made projects\\Whatsapp Clone\\whatsapp-clone\\src\\App.js":"3","C:\\Users\\Sony\\Desktop\\Self made projects\\Whatsapp Clone\\whatsapp-clone\\src\\Components\\Sidebar\\Sidebar.js":"4","C:\\Users\\Sony\\Desktop\\Self made projects\\Whatsapp Clone\\whatsapp-clone\\src\\Components\\Sidebar\\SidebarChat\\SidebarChat.js":"5","C:\\Users\\Sony\\Desktop\\Self made projects\\Whatsapp Clone\\whatsapp-clone\\src\\Components\\Chat\\Chat.js":"6","C:\\Users\\Sony\\Desktop\\Self made projects\\Whatsapp Clone\\whatsapp-clone\\src\\firebase.js":"7","C:\\Users\\Sony\\Desktop\\Self made projects\\Whatsapp Clone\\whatsapp-clone\\src\\Components\\Login\\Login.js":"8","C:\\Users\\Sony\\Desktop\\Self made projects\\Whatsapp Clone\\whatsapp-clone\\src\\reducer.js":"9","C:\\Users\\Sony\\Desktop\\Self made projects\\Whatsapp Clone\\whatsapp-clone\\src\\StateProvider.js":"10"},{"size":681,"mtime":1608201606653,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":2416,"mtime":1608624470241,"results":"14","hashOfConfig":"12"},{"size":2048,"mtime":1608202845375,"results":"15","hashOfConfig":"12"},{"size":1738,"mtime":1608536792385,"results":"16","hashOfConfig":"12"},{"size":6730,"mtime":1608617091652,"results":"17","hashOfConfig":"12"},{"size":788,"mtime":1608195211920,"results":"18","hashOfConfig":"12"},{"size":1089,"mtime":1608201841892,"results":"19","hashOfConfig":"12"},{"size":414,"mtime":1608208700510,"results":"20","hashOfConfig":"12"},{"size":353,"mtime":1608199232882,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"n2jymi",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Sony\\Desktop\\Self made projects\\Whatsapp Clone\\whatsapp-clone\\src\\index.js",[],"C:\\Users\\Sony\\Desktop\\Self made projects\\Whatsapp Clone\\whatsapp-clone\\src\\reportWebVitals.js",[],["47","48"],"C:\\Users\\Sony\\Desktop\\Self made projects\\Whatsapp Clone\\whatsapp-clone\\src\\App.js",["49","50","51","52","53","54","55"],"C:\\Users\\Sony\\Desktop\\Self made projects\\Whatsapp Clone\\whatsapp-clone\\src\\Components\\Sidebar\\Sidebar.js",["56"],"import {React, useEffect, useState} from 'react'\r\nimport {Avatar, IconButton} from \"@material-ui/core\";\r\nimport DonutLargeIcon from \"@material-ui/icons/DonutLarge\";\r\nimport ChatIcon from \"@material-ui/icons/Chat\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport SearchOutLined from \"@material-ui/icons/SearchOutlined\";\r\nimport './Sidebar.css';\r\nimport SidebarChat from './SidebarChat/SidebarChat';\r\nimport db from \"../../firebase\";\r\nimport {useStateValue} from '../../StateProvider';\r\n\r\nfunction Sidebar() {\r\n\r\n    const [{user}, dispatch]=useStateValue();\r\n    const [rooms, setRooms] = useState([]);\r\n\r\n    useEffect(() => {\r\n      db.collection('rooms').onSnapshot(snapshot=>{\r\n          setRooms(snapshot.docs.map((doc)=>({\r\n               id:doc.id,\r\n               data:doc.data()\r\n                })\r\n            ))\r\n      })\r\n    }, [])\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar-header\">\r\n            <Avatar src={user.photoURL} />\r\n                <div className=\"sidebar-headerRight\">\r\n                    <IconButton>\r\n                     <DonutLargeIcon />\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                     <ChatIcon />\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                     <MoreVertIcon />\r\n                    </IconButton>\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"sidebar-search\">\r\n              <div className=\"sidebar-searchContainer\">\r\n              <SearchOutLined />\r\n                <input placeholder=\"Search or start a new chat\" type=\"text\" />\r\n  \r\n              </div>  \r\n            \r\n\r\n                </div>\r\n\r\n            <div className=\"sidebar-chats\">\r\n               <SidebarChat addNewChat />\r\n               {rooms.map((room)=>(\r\n                   <SidebarChat key={room.id} id={room.id} name={room.data.Name}  />\r\n               ))}\r\n               \r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","C:\\Users\\Sony\\Desktop\\Self made projects\\Whatsapp Clone\\whatsapp-clone\\src\\Components\\Sidebar\\SidebarChat\\SidebarChat.js",["57","58"],"import { Avatar } from '@material-ui/core';\r\nimport { React, useEffect, useState} from 'react';\r\nimport './SidebarChat.css';\r\nimport db from '../../../firebase';\r\nimport { Link } from 'react-router-dom';\r\nimport {useStateValue} from '../../../StateProvider';\r\nimport firebase from 'firebase';\r\n\r\nfunction SidebarChat({addNewChat,name, id}) {\r\n\r\n    const [{user}, dispatch]=useStateValue();\r\n    const [seed, setSeed] = useState('');\r\n    const [messages, setMessages] = useState(\"\")\r\n    useEffect(() => {\r\n        setSeed(Math.floor(Math.random() * 5000))\r\n        \r\n    }, [])\r\n\r\n    useEffect(() => {\r\n      if(id)\r\n      {\r\n          db.collection('rooms').doc(id).collection('messages')\r\n          .orderBy('timestamp', 'desc')\r\n          .onSnapshot(snapshot=>\r\n           setMessages(snapshot.docs.map((doc)=>doc.data()))     \r\n          );\r\n      }\r\n    }, [id]);\r\n\r\n    const createChat=()=>{\r\n        const roomName=prompt(\"Please enter the chat name\");\r\n\r\n        if(roomName){\r\n            db.collection('rooms').add({\r\n                Name:roomName,\r\n                createdAt:firebase.firestore.FieldValue.serverTimestamp()\r\n            });\r\n        }\r\n    } \r\n\r\n\r\n    return !addNewChat ? (\r\n       <Link to={`/rooms/${id}`} >\r\n            <div className=\"sidebar_chat\">\r\n            <Avatar src= {`https://avatars.dicebear.com/api/human/${seed}.svg`} />\r\n            <div className=\"sidebar_chat_info\">\r\n                <h2>{name}</h2>\r\n                <p>{messages[0]?.message}</p>\r\n            </div>\r\n            \r\n        </div>\r\n       </Link>\r\n       \r\n    ): (\r\n        <div className=\"sidebar_chat\" onClick={createChat}>\r\n            <h2>Add new Chat</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarChat\r\n","C:\\Users\\Sony\\Desktop\\Self made projects\\Whatsapp Clone\\whatsapp-clone\\src\\Components\\Chat\\Chat.js",["59","60"],"import { Avatar, IconButton } from '@material-ui/core'\r\nimport SearchOutlined from '@material-ui/icons/SearchOutlined';\r\nimport  AttachFile from '@material-ui/icons/AttachFile';\r\nimport  MoreVert from '@material-ui/icons/MoreVert';\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport {React, useState, useEffect} from 'react'\r\nimport \"./Chat.css\";\r\nimport {useParams} from 'react-router-dom';\r\nimport db from '../../firebase';\r\nimport {useStateValue} from '../../StateProvider';\r\nimport firebase from 'firebase';\r\nimport Picker from 'emoji-picker-react';\r\nimport MicRecorder from '../../../node_modules/mic-recorder-to-mp3';\r\n\r\nimport MicOffIcon from '@material-ui/icons/MicOff';\r\n\r\n \r\n\r\nfunction Chat() {\r\n\r\n\r\n    const [isRecord, setIsRecord] = useState(false);\r\n    const recorder = new MicRecorder({\r\n        bitRate: 128\r\n      });\r\n\r\n      const startRec=()=>{\r\n        recorder.start().then(() => {\r\n            setIsRecord(true);\r\n            \r\n          }).catch((e) => {\r\n            console.error(e);\r\n          });\r\n      }\r\n\r\n   const stopRec=()=>{\r\n       setIsRecord(false);\r\n                         recorder.stop()\r\n                         .getMp3().then(([buffer, blob]) => {\r\n        // do what ever you want with buffer and blob\r\n        // Example: Create a mp3 file and play\r\n                          const file = new File(buffer, 'me-at-thevoice.mp3', {\r\n                         type: blob.type,\r\n                        lastModified: Date.now()\r\n            });\r\n\r\n\r\n\r\n                        const player = new Audio(URL.createObjectURL(file));\r\n                        player.play();\r\n\r\n                        }).catch((e) => {\r\n                        alert('We could not retrieve your message');\r\n                        console.log(e);\r\n                        });\r\n                    }\r\n    //Emoticon\r\n    const [chosenEmoji, setChosenEmoji] = useState(null);\r\n    const [emochart, setemochart] = useState(false);\r\n    const onEmojiClick = (event, emojiObject) => {\r\n      setChosenEmoji(emojiObject);\r\n      setInput(input+emojiObject.emoji);\r\n    };\r\n\r\n\r\n\r\n    const showEmoticons=(e)=>{\r\n        (emochart===false)?(setemochart(true))\r\n        :(setemochart(false))\r\n        \r\n            \r\n    }\r\nconst [input, setInput] = useState(\"\");\r\nconst [roomName, setRoomName] = useState([]);\r\nconst [messages, setMessages] = useState([]);\r\n\r\n    \r\nconst [{user}, dispatch]=useStateValue();\r\nconsole.log(\"record\",isRecord);\r\n\r\nconst sendMessage=(e)=>{\r\n        e.preventDefault();\r\n          \r\n        db.collection('rooms').doc(roomId).collection('messages').add({\r\n            message:input,\r\n            name:user.displayName,\r\n            timestamp:firebase.firestore.FieldValue.serverTimestamp(),\r\n        });\r\n\r\n        setInput('');\r\n    }\r\n\r\n    const {roomId}=useParams();\r\n\r\n    useEffect(() => {\r\n      if(roomId){\r\n        db.collection('rooms').doc(roomId).onSnapshot(snapshot=>{\r\n           \r\n            setRoomName(snapshot.data())\r\n          \r\n\r\n            db.collection('rooms').doc(roomId).collection('messages').orderBy('timestamp', 'asc').onSnapshot(snapshot=>( \r\n                    setMessages(snapshot.docs.map(text=>text.data()))\r\n            ))\r\n        })\r\n\r\n      }\r\n    }, [roomId])\r\n    let time=new Date(\r\n        messages[messages.length-1]?.timestamp?.toDate()).toLocaleString();\r\nconsole.log(time);\r\nlet created=new Date(roomName.createdAt?.toDate()).toLocaleString();\r\n\r\nreturn (\r\n        <div className=\"chat\">\r\n            <div className=\"chat_header\">\r\n            <Avatar />\r\n\r\n            <div className=\"chat_headerInfo\">\r\n            <h3>{roomName.Name}</h3>\r\n            {\r\n                (time===\"Invalid Date\" && created===\"Invalid Date\")?\r\n                    (            \r\n                    <p></p>\r\n                    )\r\n                :(\r\n                        \r\n                    (time!==\"Invalid Date\" && created!==\"Invalid Date\")?(  <p>Last seen at {new Date(\r\n                            messages[messages.length-1]?.timestamp?.toDate()).toLocaleString()}\r\n                            </p>)\r\n                            :( \r\n                                (time===\"Invalid Date\")\r\n                                ?(<p>Created at {new Date(roomName.createdAt?.toDate()).toLocaleString()}</p>)\r\n                                :(<p>Last seen at {new Date(messages[messages.length-1]?.timestamp?.toDate()).toLocaleString()}</p>)\r\n                                               \r\n                            )\r\n                )\r\n           \r\n            }\r\n                  \r\n                    \r\n            \r\n            </div>\r\n            <div className=\"chatHeaderRight\">\r\n            <IconButton>\r\n                     <SearchOutlined />\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                     <AttachFile />\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                     <MoreVert />\r\n                    </IconButton>                 \r\n            </div>\r\n            </div>\r\n\r\n            <div className=\"chat_body\">\r\n            {console.log(messages.name, user.displayName)}\r\n               {messages.map((text)=>(\r\n                <p className={`chat_message  ${text.name === user.displayName && \"chat_reciever\"}`}>\r\n                <span className=\"chat_name\">{text.name}</span>\r\n                {text.message} \r\n               <span className=\"chat_timestamp\">\r\n                {new Date(text.timestamp?.toDate()).toLocaleTimeString('en-US', { hour12: true, hour: '2-digit', minute: '2-digit' }) }</span> \r\n                </p>\r\n               ))} \r\n               \r\n                \r\n            </div>\r\n\r\n            {(emochart===true)?(<Picker onEmojiClick={onEmojiClick} />  ):(<div></div>)\r\n               }     \r\n            <div className=\"chat_footer\">\r\n               \r\n                \r\n                <form>\r\n                    <input value={input} onChange={(e)=> setInput(e.target.value)} type=\"text\" placeholder=\"Type a message\" />\r\n                    <button onClick={sendMessage}>Send a message</button>\r\n                </form>  \r\n               \r\n                {(isRecord===true)? (<div><IconButton><MicOffIcon onClick={stopRec} /></IconButton> <IconButton><InsertEmoticonIcon onClick={showEmoticons} />  </IconButton></div>)\r\n                :( <div> <IconButton><InsertEmoticonIcon onClick={showEmoticons} />  </IconButton><IconButton><MicIcon onClick={startRec} /></IconButton></div>)\r\n                }\r\n               \r\n                    \r\n                  \r\n            \r\n     \r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n","C:\\Users\\Sony\\Desktop\\Self made projects\\Whatsapp Clone\\whatsapp-clone\\src\\firebase.js",[],"C:\\Users\\Sony\\Desktop\\Self made projects\\Whatsapp Clone\\whatsapp-clone\\src\\Components\\Login\\Login.js",["61"],"import React from 'react';\r\nimport './Login.css';\r\nimport Button from '@material-ui/core/Button/Button';\r\nimport {auth, provider} from '../../firebase';\r\nimport { useStateValue } from '../../StateProvider';\r\nimport {actionTypes} from '../../reducer'\r\n\r\n\r\nfunction Login() {\r\nconst [{},dispatch]=useStateValue();\r\n    const signIn=()=>{\r\n    auth.signInWithPopup(provider).then((result) =>{\r\n        dispatch({\r\n            type:actionTypes.SET_USER,\r\n            user:result.user,\r\n        });\r\n    }\r\n    ).catch((error)=> alert(error.message));\r\n\r\n}\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login-container\">\r\n                <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/6b/WhatsApp.svg/598px-WhatsApp.svg.png\" alt=\"\" />\r\n           \r\n\r\n            <div className=\"login-text\">\r\n                <h1>Sign in to WhatsApp</h1>\r\n            </div>\r\n\r\n            <Button type=\"submit\" onClick={signIn}>\r\n                Sign In With Google\r\n            </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","C:\\Users\\Sony\\Desktop\\Self made projects\\Whatsapp Clone\\whatsapp-clone\\src\\reducer.js",[],"C:\\Users\\Sony\\Desktop\\Self made projects\\Whatsapp Clone\\whatsapp-clone\\src\\StateProvider.js",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":1,"column":15,"nodeType":"68","messageId":"69","endLine":1,"endColumn":23},{"ruleId":"66","severity":1,"message":"70","line":61,"column":9,"nodeType":"68","messageId":"69","endLine":61,"endColumn":20},{"ruleId":"66","severity":1,"message":"71","line":62,"column":9,"nodeType":"68","messageId":"69","endLine":62,"endColumn":25},{"ruleId":"66","severity":1,"message":"72","line":63,"column":9,"nodeType":"68","messageId":"69","endLine":63,"endColumn":31},{"ruleId":"66","severity":1,"message":"73","line":66,"column":9,"nodeType":"68","messageId":"69","endLine":66,"endColumn":19},{"ruleId":"66","severity":1,"message":"74","line":67,"column":9,"nodeType":"68","messageId":"69","endLine":67,"endColumn":17},{"ruleId":"66","severity":1,"message":"75","line":70,"column":17,"nodeType":"68","messageId":"69","endLine":70,"endColumn":25},{"ruleId":"66","severity":1,"message":"75","line":14,"column":20,"nodeType":"68","messageId":"69","endLine":14,"endColumn":28},{"ruleId":"66","severity":1,"message":"76","line":11,"column":13,"nodeType":"68","messageId":"69","endLine":11,"endColumn":17},{"ruleId":"66","severity":1,"message":"75","line":11,"column":20,"nodeType":"68","messageId":"69","endLine":11,"endColumn":28},{"ruleId":"66","severity":1,"message":"77","line":59,"column":12,"nodeType":"68","messageId":"69","endLine":59,"endColumn":23},{"ruleId":"66","severity":1,"message":"75","line":79,"column":16,"nodeType":"68","messageId":"69","endLine":79,"endColumn":24},{"ruleId":"78","severity":1,"message":"79","line":10,"column":8,"nodeType":"80","messageId":"81","endLine":10,"endColumn":10},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'isBigScreen' is assigned a value but never used.","'isTabletOrMobile' is assigned a value but never used.","'isTabletOrMobileDevice' is assigned a value but never used.","'isPortrait' is assigned a value but never used.","'isRetina' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'user' is assigned a value but never used.","'chosenEmoji' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-global-assign","no-unsafe-negation"]